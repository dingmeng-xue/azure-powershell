// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Commands.WebApps.Helper.PrivateDns
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for VirtualNetworkLinks.
    /// </summary>
    public static partial class VirtualNetworkLinksExtensions
    {
            /// <summary>
            /// Creates or updates a virtual network link to the specified Private DNS
            /// zone.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='privateZoneName'>
            /// The name of the Private DNS zone (without a terminating dot).
            /// </param>
            /// <param name='virtualNetworkLinkName'>
            /// The name of the virtual network link.
            /// </param>
            /// <param name='parameters'>
            /// Parameters supplied to the CreateOrUpdate operation.
            /// </param>
            /// <param name='ifMatch'>
            /// The ETag of the virtual network link to the Private DNS zone. Omit this
            /// value to always overwrite the current virtual network link. Specify the
            /// last-seen ETag value to prevent accidentally overwriting any concurrent
            /// changes.
            /// </param>
            /// <param name='ifNoneMatch'>
            /// Set to '*' to allow a new virtual network link to the Private DNS zone to
            /// be created, but to prevent updating an existing link. Other values will be
            /// ignored.
            /// </param>
            public static VirtualNetworkLink CreateOrUpdate(this IVirtualNetworkLinks operations, string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, VirtualNetworkLink parameters, string ifMatch = default(string), string ifNoneMatch = default(string))
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, privateZoneName, virtualNetworkLinkName, parameters, ifMatch, ifNoneMatch).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates a virtual network link to the specified Private DNS
            /// zone.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='privateZoneName'>
            /// The name of the Private DNS zone (without a terminating dot).
            /// </param>
            /// <param name='virtualNetworkLinkName'>
            /// The name of the virtual network link.
            /// </param>
            /// <param name='parameters'>
            /// Parameters supplied to the CreateOrUpdate operation.
            /// </param>
            /// <param name='ifMatch'>
            /// The ETag of the virtual network link to the Private DNS zone. Omit this
            /// value to always overwrite the current virtual network link. Specify the
            /// last-seen ETag value to prevent accidentally overwriting any concurrent
            /// changes.
            /// </param>
            /// <param name='ifNoneMatch'>
            /// Set to '*' to allow a new virtual network link to the Private DNS zone to
            /// be created, but to prevent updating an existing link. Other values will be
            /// ignored.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<VirtualNetworkLink> CreateOrUpdateAsync(this IVirtualNetworkLinks operations, string resourceGroupName, string privateZoneName, string virtualNetworkLinkName, VirtualNetworkLink parameters, string ifMatch = default(string), string ifNoneMatch = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, privateZoneName, virtualNetworkLinkName, parameters, ifMatch, ifNoneMatch, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the virtual network links to the specified Private DNS zone.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='privateZoneName'>
            /// The name of the Private DNS zone (without a terminating dot).
            /// </param>
            /// <param name='top'>
            /// The maximum number of virtual network links to return. If not specified,
            /// returns up to 100 virtual network links.
            /// </param>
            public static VirtualNetworkLinkListResult List(this IVirtualNetworkLinks operations, string resourceGroupName, string privateZoneName, int? top = default(int?))
            {
                return operations.ListAsync(resourceGroupName, privateZoneName, top).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the virtual network links to the specified Private DNS zone.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group.
            /// </param>
            /// <param name='privateZoneName'>
            /// The name of the Private DNS zone (without a terminating dot).
            /// </param>
            /// <param name='top'>
            /// The maximum number of virtual network links to return. If not specified,
            /// returns up to 100 virtual network links.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<VirtualNetworkLinkListResult> ListAsync(this IVirtualNetworkLinks operations, string resourceGroupName, string privateZoneName, int? top = default(int?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, privateZoneName, top, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
